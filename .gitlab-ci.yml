stages: 
  - build
  - test
  - publish
  - deploy

backend-build-job:
  stage: build
  tags: 
    - deployment
  image: maven:3.8.3-openjdk-17
  script:
    - echo "running backend BUILD job"
    - cd backend/
    - mvn clean install -DskipTests
    - echo "✨ Backend job finished successfully ✅"
  artifacts:
    paths:
      - backend/target/*.jar

frontend-build-job:
  stage: build
  tags: 
    - deployment
  image: node:18.18
  script:
    - echo "running frontend BUILD job"
    - cd frontend/
    - yarn install
    - yarn build
    - echo "Frontend job finished successfully ✅"
  artifacts:
    paths:
      - frontend/build/*

backend-test-job: 
  stage: test
  image: maven:3.8.3-openjdk-17
  tags: 
    - deployment
  script:
    - echo "running backend TEST job"
    - cd backend/
    - mvn verify
    - echo "Backend test job finished successfully ✅"

frontend-test-job:
  stage: test
  image: node:18.18
  script:
    - echo "running frontend TEST job"
    - cd frontend/
    - yarn install
    - yarn test
    - echo "✨ Frontend test job finished successfully ✅"

publish:
  image: docker:latest
  stage: publish
  tags: 
    - deployment
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: "tcp://docker:2375"
  services:
    - docker:dind
  script:
    - docker --version
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io

    - cd backend/ # backend publish
    - docker build -t docker.io/dishaanand2299/shelter-backend:$CI_COMMIT_SHORT_SHA .
    - docker push docker.io/dishaanand2299/shelter-backend:$CI_COMMIT_SHORT_SHA
  
    - cd ../frontend/  # frontend publish
    - docker build -t docker.io/dishaanand2299/shelter-frontend:$CI_COMMIT_SHORT_SHA .
    - docker push docker.io/dishaanand2299/shelter-frontend:$CI_COMMIT_SHORT_SHA

  only:
    - main

deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - deployment
  script:
    - apk update && apk add openssh-client
    - chmod og= $ID_RSA

    # login
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"

    # code pull
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/dishaanand2299/shelter-backend:$CI_COMMIT_SHORT_SHA"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/dishaanand2299/shelter-frontend:$CI_COMMIT_SHORT_SHA"
    
    # remove earlier code
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f shelter-backend || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f shelter-frontend || true"
    
    # run container with specific ports
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 8080:8080 --name shelter-backend docker.io/dishaanand2299/shelter-backend:$CI_COMMIT_SHORT_SHA"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 3000:3000 --name shelter-frontend docker.io/dishaanand2299/shelter-frontend:$CI_COMMIT_SHORT_SHA"
    
  environment:
    name: production
    url: http://172.19.3.124:3000 # mapping to frontend env
  only:
    - main
